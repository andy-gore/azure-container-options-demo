#build and run locally

docker image build . -t hellodemo
docker image tag hellodemo:latest hellodemo:v1
docker run -p 3000:80 --name mycontainer -d hellodemo

##??add docker image inspect 

#login to azure
az login

#deploy acr
RESOURCE_GROUP=demorg
LOCATION="westeurope"
az group create --name $RESOURCE_GROUP --location $LOCATION 

REGISTRY_NAME=demoacrt$RANDOM
REGISTRY_URL=$REGISTRY_NAME.azurecr.io

az acr create --resource-group $RESOURCE_GROUP --name $REGISTRY_NAME --admin-enabled true --sku Basic


#push to acr
docker login $REGISTRY_URL
docker tag hellodemo:latest $REGISTRY_URL/hellodemo
docker push $REGISTRY_URL/hellodemo


#deploy to app service

APP_NAME=democontapp-$RANDOM-$RANDOM

az appservice plan create --name demoAppServicePlan --resource-group $RESOURCE_GROUP --is-linux
az webapp create --resource-group $RESOURCE_GROUP --plan demoAppServicePlan --name $APP_NAME --deployment-container-image-name $REGISTRY_URL/hellodemo:latest


##create managed identity
MANAGED_IDENTITY=$(az webapp identity assign --resource-group $RESOURCE_GROUP --name $APP_NAME --query principalId --output tsv)

SUBSCRIPTION_ID=$(az account show --query id --output tsv)

##grant identity access to registry
az role assignment create --assignee $MANAGED_IDENTITY --scope /subscriptions/$SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.ContainerRegistry/registries/$REGISTRY_NAME --role "AcrPull"

##configure the app to use the managed identity to pull from ACR
az resource update --ids /subscriptions/$SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.Web/sites/$APP_NAME/config/web --set properties.acrUseManagedIdentityCreds=True

az webapp config container set --name $APP_NAME --resource-group $RESOURCE_GROUP --docker-custom-image-name $REGISTRY_URL/hellodemo:latest --docker-registry-server-url https://$REGISTRY_URL
